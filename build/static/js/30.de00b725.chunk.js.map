{"version":3,"sources":["core/config/layout.ts","core/components/SettingsDrawer.tsx","admin/components/AdminDrawer.tsx","admin/pages/Admin.tsx"],"names":["drawerCollapsedWidth","drawerWidth","SettingsDrawer","onDrawerToggle","open","useSettings","changeCollapsed","changeDirection","changeMode","collapsed","direction","mode","useTranslation","i18n","t","anchor","onClose","sx","width","variant","display","justifyContent","alignItems","p","color","onClick","edge","pl","pr","gutterBottom","id","marginTop","aria-label","name","onChange","event","changeLanguage","target","value","language","control","label","exclusive","fullWidth","_","menuItems","icon","HomeIcon","key","path","BarChartIcon","PeopleIcon","EventIcon","AccountTreeIcon","HelpCenterIcon","AdminDrawer","mobileOpen","onSettingsToggle","userInfo","useAuth","drawer","Box","flexDirection","minHeight","Logo","List","component","px","map","item","ListItem","button","NavLink","activeClassName","end","to","process","ListItemAvatar","Avatar","bgcolor","ListItemText","primary","flexGrow","firstName","lastName","lg","flexShrink","Drawer","ModalProps","keepMounted","xs","boxSizing","AdminLayout","useState","settingsOpen","setSettingsOpen","toggleDrawer","handleSettingsToggle","pb","sm","Toolbar","QueryWrapper"],"mappings":"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","file":"static/js/30.de00b725.chunk.js","sourcesContent":["export const drawerCollapsedWidth = 104;\r\nexport const drawerWidth = 280;\r\n","import Box from \"@material-ui/core/Box\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport ToggleButton from \"@material-ui/core/ToggleButton\";\r\nimport ToggleButtonGroup from \"@material-ui/core/ToggleButtonGroup\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { drawerWidth } from \"../config/layout\";\r\nimport { useSettings } from \"../contexts/SettingsProvider\";\r\n\r\ntype SettingsDrawerProps = {\r\n  onDrawerToggle: () => void;\r\n  open: boolean;\r\n};\r\n\r\nconst SettingsDrawer = ({ onDrawerToggle, open }: SettingsDrawerProps) => {\r\n  const {\r\n    changeCollapsed,\r\n    changeDirection,\r\n    changeMode,\r\n    collapsed,\r\n    direction,\r\n    mode,\r\n  } = useSettings();\r\n  const { i18n, t } = useTranslation();\r\n\r\n  const handleDirectionChange = (_: any, direction: \"ltr\" | \"rtl\") => {\r\n    changeDirection(direction);\r\n  };\r\n\r\n  const handleLanguageChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    i18n.changeLanguage((event.target as HTMLInputElement).value);\r\n  };\r\n\r\n  const handleModeChange = (_: any, mode: string) => {\r\n    changeMode(mode);\r\n  };\r\n\r\n  const handleSidebarChange = (_: any, collapsed: boolean) => {\r\n    changeCollapsed(collapsed);\r\n  };\r\n\r\n  return (\r\n    <Drawer\r\n      anchor=\"left\"\r\n      open={open}\r\n      onClose={onDrawerToggle}\r\n      sx={{\r\n        \"& .MuiDrawer-paper\": {\r\n          width: drawerWidth,\r\n        },\r\n      }}\r\n      variant=\"temporary\"\r\n    >\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n          p: 2,\r\n        }}\r\n      >\r\n        <Typography variant=\"h5\">{t(\"settings.drawer.title\")}</Typography>\r\n        <IconButton color=\"inherit\" onClick={onDrawerToggle} edge=\"end\">\r\n          <CloseIcon />\r\n        </IconButton>\r\n      </Box>\r\n      <Box sx={{ pl: 2, pr: 2 }}>\r\n        <Typography\r\n          gutterBottom\r\n          id=\"settings-language\"\r\n          marginTop={3}\r\n          variant=\"h6\"\r\n        >\r\n          {t(\"settings.drawer.language.label\")}\r\n        </Typography>\r\n        <FormControl>\r\n          <RadioGroup\r\n            aria-label=\"language\"\r\n            name=\"language-radio-group\"\r\n            onChange={handleLanguageChange}\r\n            value={i18n.language}\r\n          >\r\n            <FormControlLabel\r\n              value=\"en\"\r\n              control={<Radio />}\r\n              label={t(\"settings.drawer.language.options.en\")}\r\n            />\r\n            <FormControlLabel\r\n              value=\"fr\"\r\n              control={<Radio />}\r\n              label={t(\"settings.drawer.language.options.fr\")}\r\n            />\r\n          </RadioGroup>\r\n        </FormControl>\r\n        <Typography gutterBottom id=\"settings-mode\" marginTop={3} variant=\"h6\">\r\n          {t(\"settings.drawer.mode.label\")}\r\n        </Typography>\r\n        <ToggleButtonGroup\r\n          color=\"primary\"\r\n          value={mode}\r\n          exclusive\r\n          fullWidth\r\n          onChange={handleModeChange}\r\n        >\r\n          <ToggleButton value=\"light\">\r\n            {t(\"settings.drawer.mode.options.light\")}\r\n          </ToggleButton>\r\n          <ToggleButton value=\"dark\">\r\n            {t(\"settings.drawer.mode.options.dark\")}\r\n          </ToggleButton>\r\n        </ToggleButtonGroup>\r\n        <Typography gutterBottom id=\"settings-mode\" marginTop={3} variant=\"h6\">\r\n          {t(\"settings.drawer.direction.label\")}\r\n        </Typography>\r\n        <ToggleButtonGroup\r\n          color=\"primary\"\r\n          value={direction}\r\n          exclusive\r\n          fullWidth\r\n          onChange={handleDirectionChange}\r\n        >\r\n          <ToggleButton value=\"ltr\">\r\n            {t(\"settings.drawer.direction.options.ltr\")}\r\n          </ToggleButton>\r\n          <ToggleButton value=\"rtl\">\r\n            {t(\"settings.drawer.direction.options.rtl\")}\r\n          </ToggleButton>\r\n        </ToggleButtonGroup>\r\n        <Typography\r\n          gutterBottom\r\n          id=\"settings-sidebar\"\r\n          marginTop={3}\r\n          variant=\"h6\"\r\n        >\r\n          {t(\"settings.drawer.sidebar.label\")}\r\n        </Typography>\r\n        <ToggleButtonGroup\r\n          color=\"primary\"\r\n          value={collapsed}\r\n          exclusive\r\n          fullWidth\r\n          onChange={handleSidebarChange}\r\n        >\r\n          <ToggleButton value={true}>\r\n            {t(\"settings.drawer.sidebar.options.collapsed\")}\r\n          </ToggleButton>\r\n          <ToggleButton value={false}>\r\n            {t(\"settings.drawer.sidebar.options.full\")}\r\n          </ToggleButton>\r\n        </ToggleButtonGroup>\r\n      </Box>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default SettingsDrawer;\r\n","import Avatar from \"@material-ui/core/Avatar\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport AccountTreeIcon from \"@material-ui/icons/AccountTree\";\r\nimport BarChartIcon from \"@material-ui/icons/BarChart\";\r\nimport EventIcon from \"@material-ui/icons/Event\";\r\nimport HelpCenterIcon from \"@material-ui/icons/HelpCenter\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useAuth } from \"../../auth/contexts/AuthProvider\";\r\nimport Logo from \"../../core/components/Logo\";\r\nimport { drawerCollapsedWidth, drawerWidth } from \"../../core/config/layout\";\r\n\r\ntype AdminDrawerProps = {\r\n  collapsed: boolean;\r\n  mobileOpen: boolean;\r\n  onDrawerToggle: () => void;\r\n  onSettingsToggle: () => void;\r\n};\r\n\r\nexport const menuItems = [\r\n  {\r\n    icon: HomeIcon,\r\n    key: \"admin.drawer.menu.home\",\r\n    path: \"/admin\",\r\n  },\r\n  {\r\n    icon: BarChartIcon,\r\n    key: \"admin.drawer.menu.dashboard\",\r\n    path: \"/admin/dashboard\",\r\n  },\r\n  {\r\n    icon: PeopleIcon,\r\n    key: \"admin.drawer.menu.userManagement\",\r\n    path: \"/admin/user-management\",\r\n  },\r\n  {\r\n    icon: EventIcon,\r\n    key: \"admin.drawer.menu.calendar\",\r\n    path: \"/admin/calendar\",\r\n  },\r\n  {\r\n    icon: AccountTreeIcon,\r\n    key: \"admin.drawer.menu.projects\",\r\n    path: \"/admin/projects\",\r\n  },\r\n  {\r\n    icon: HelpCenterIcon,\r\n    key: \"admin.drawer.menu.help\",\r\n    path: \"/admin/help\",\r\n  },\r\n];\r\n\r\nconst AdminDrawer = ({\r\n  collapsed,\r\n  mobileOpen,\r\n  onDrawerToggle,\r\n  onSettingsToggle,\r\n}: AdminDrawerProps) => {\r\n  const { userInfo } = useAuth();\r\n  const { t } = useTranslation();\r\n\r\n  const width = collapsed ? drawerCollapsedWidth : drawerWidth;\r\n\r\n  const drawer = (\r\n    <Box sx={{ display: \"flex\", flexDirection: \"column\", minHeight: \"100%\" }}>\r\n      <Logo sx={{ display: \"flex\", p: 4 }} />\r\n      <List component=\"nav\" sx={{ px: 2 }}>\r\n        {menuItems.map((item) => (\r\n          <ListItem\r\n            button\r\n            component={NavLink}\r\n            key={item.path}\r\n            activeClassName=\"Mui-selected\"\r\n            end={true}\r\n            to={`/${process.env.PUBLIC_URL}${item.path}`}\r\n          >\r\n            <ListItemAvatar>\r\n              <Avatar sx={{ color: \"inherit\", bgcolor: \"transparent\" }}>\r\n                <item.icon />\r\n              </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText\r\n              primary={t(item.key)}\r\n              sx={{\r\n                display: collapsed ? \"none\" : \"block\",\r\n              }}\r\n            />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Box sx={{ flexGrow: 1 }} />\r\n      <List component=\"nav\" sx={{ p: 2 }}>\r\n        <ListItem\r\n          button\r\n          component={NavLink}\r\n          to={`/${process.env.PUBLIC_URL}/admin/profile`}\r\n        >\r\n          <ListItemAvatar>\r\n            <Avatar>\r\n              <PersonIcon />\r\n            </Avatar>\r\n          </ListItemAvatar>\r\n          {userInfo && (\r\n            <ListItemText\r\n              primary={`${userInfo.firstName} ${userInfo.lastName}`}\r\n              sx={{\r\n                display: collapsed ? \"none\" : \"block\",\r\n              }}\r\n            />\r\n          )}\r\n        </ListItem>\r\n        <ListItem button onClick={onSettingsToggle}>\r\n          <ListItemAvatar>\r\n            <Avatar>\r\n              <SettingsIcon />\r\n            </Avatar>\r\n          </ListItemAvatar>\r\n          <ListItemText\r\n            primary={t(\"admin.drawer.menu.settings\")}\r\n            sx={{\r\n              display: collapsed ? \"none\" : \"block\",\r\n            }}\r\n          />\r\n        </ListItem>\r\n      </List>\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <Box\r\n      aria-label=\"Admin drawer\"\r\n      component=\"nav\"\r\n      sx={{\r\n        width: { lg: width },\r\n        flexShrink: { lg: 0 },\r\n      }}\r\n    >\r\n      {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n      <Drawer\r\n        variant=\"temporary\"\r\n        open={mobileOpen}\r\n        onClose={onDrawerToggle}\r\n        ModalProps={{\r\n          keepMounted: true, // Better open performance on mobile.\r\n        }}\r\n        sx={{\r\n          display: { xs: \"block\", lg: \"none\" },\r\n          \"& .MuiDrawer-paper\": {\r\n            boxSizing: \"border-box\",\r\n            width: width,\r\n          },\r\n        }}\r\n      >\r\n        {drawer}\r\n      </Drawer>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        open\r\n        sx={{\r\n          display: { xs: \"none\", lg: \"block\" },\r\n          \"& .MuiDrawer-paper\": {\r\n            boxSizing: \"border-box\",\r\n            width: width,\r\n          },\r\n        }}\r\n      >\r\n        {drawer}\r\n      </Drawer>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AdminDrawer;\r\n","import Box from \"@material-ui/core/Box\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport { useState } from \"react\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport QueryWrapper from \"../../core/components/QueryWrapper\";\r\nimport SettingsDrawer from \"../../core/components/SettingsDrawer\";\r\nimport { useSettings } from \"../../core/contexts/SettingsProvider\";\r\nimport AdminDrawer from \"../components/AdminDrawer\";\r\n\r\nconst AdminLayout = () => {\r\n  const [settingsOpen, setSettingsOpen] = useState(false);\r\n\r\n  const { collapsed, open, toggleDrawer } = useSettings();\r\n\r\n  const handleSettingsToggle = () => {\r\n    setSettingsOpen(!settingsOpen);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ display: \"flex\" }}>\r\n      <AdminDrawer\r\n        collapsed={collapsed}\r\n        mobileOpen={open}\r\n        onDrawerToggle={toggleDrawer}\r\n        onSettingsToggle={handleSettingsToggle}\r\n      />\r\n      <SettingsDrawer\r\n        onDrawerToggle={handleSettingsToggle}\r\n        open={settingsOpen}\r\n      />\r\n      <Box component=\"main\" sx={{ flexGrow: 1, pb: 3, px: { xs: 3, sm: 6 } }}>\r\n        <Toolbar />\r\n        <QueryWrapper>\r\n          <Outlet />\r\n        </QueryWrapper>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AdminLayout;\r\n"],"sourceRoot":""}