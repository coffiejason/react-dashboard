{"version":3,"sources":["core/config/layout.ts","admin/components/AdminAppBar.tsx","admin/components/AdminToolbar.tsx","admin/pages/Faq.tsx"],"names":["drawerCollapsedWidth","drawerWidth","AdminAppBar","children","width","useSettings","collapsed","color","position","sx","lg","marginLeft","AdminToolbar","title","toggleDrawer","px","xs","sm","aria-label","edge","onClick","display","marginRight","variant","component","flexGrow","questions","answer","Faq","t","useTranslation","Fragment","maxWidth","align","marginBottom","map","question","index","expandIcon","RouterLink","to","process"],"mappings":"mIAAA,oEAAO,IAAMA,EAAuB,IACvBC,EAAc,K,iCCD3B,sCA0BeC,IAlBK,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,SAEfC,EADgBC,cAAdC,UACkBN,IAAuBC,IAEjD,OACE,cAAC,IAAD,CACEM,MAAM,UACNC,SAAS,QACTC,GAAI,CACFL,MAAO,CAAEM,GAAG,eAAD,OAAiBN,EAAjB,QACXO,WAAY,CAAED,GAAIN,IALtB,SAQGD,M,iCCrBP,iEAoCeS,IAzBM,SAAC,GAA4C,IAA1CT,EAAyC,EAAzCA,SAAUU,EAA+B,EAA/BA,MACxBC,EAAiBT,cAAjBS,aAER,OACE,eAAC,IAAD,CAASL,GAAI,CAAEM,GAAI,CAAEC,GAAI,EAAGC,GAAI,IAAhC,UACE,cAAC,IAAD,CACEV,MAAM,UACNW,aAAW,cACXC,KAAK,QACLC,QAASN,EACTL,GAAI,CACFY,QAAS,CAAEX,GAAI,QACfY,YAAa,GAPjB,SAUE,cAAC,IAAD,MAEF,cAAC,IAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAKf,GAAI,CAAEgB,SAAU,GAAxD,SACGZ,IAEFV,O,iCC/BP,6IAaMuB,EAAY,CAChB,CACEb,MAAO,uBACPc,OAAQ,yBAEV,CACEd,MAAO,uBACPc,OAAQ,yBAEV,CACEd,MAAO,uBACPc,OAAQ,yBAEV,CACEd,MAAO,uBACPc,OAAQ,yBAEV,CACEd,MAAO,uBACPc,OAAQ,yBAEV,CACEd,MAAO,uBACPc,OAAQ,0BA0CGC,UAtCH,WACV,IAAQC,EAAMC,cAAND,EAER,OACE,eAAC,IAAME,SAAP,WACE,cAAC,IAAD,UACE,cAAC,IAAD,MAEF,eAAC,IAAD,CAAWC,SAAS,KAApB,UACE,cAAC,IAAD,CAAYC,MAAM,SAASC,aAAc,EAAGX,QAAQ,KAApD,SACGM,EAAE,eAEJH,EAAUS,KAAI,SAACC,EAAUC,GAAX,OACb,eAAC,IAAD,WACE,cAAC,IAAD,CAAkBC,WAAY,cAAC,IAAD,IAA9B,SACE,cAAC,IAAD,CAAYd,UAAU,IAAID,QAAQ,KAAlC,SACGM,EAAEO,EAASvB,WAGhB,cAAC,IAAD,UACE,cAAC,IAAD,CAAYN,MAAM,iBAAlB,SACGsB,EAAEO,EAAST,cARFU,MAalB,cAAC,IAAD,CACEb,UAAWe,IACXC,GAAE,WAAMC,IAAN,eACFlB,QAAQ,QAHV,SAKGM,EAAE","file":"static/js/28.6548eae2.chunk.js","sourcesContent":["export const drawerCollapsedWidth = 104;\r\nexport const drawerWidth = 280;\r\n","import AppBar from \"@material-ui/core/AppBar\";\r\nimport { drawerCollapsedWidth, drawerWidth } from \"../../core/config/layout\";\r\nimport { useSettings } from \"../../core/contexts/SettingsProvider\";\r\n\r\ntype AdminAppBarProps = {\r\n  children: React.ReactNode;\r\n};\r\n\r\nconst AdminAppBar = ({ children }: AdminAppBarProps) => {\r\n  const { collapsed } = useSettings();\r\n  const width = collapsed ? drawerCollapsedWidth : drawerWidth;\r\n\r\n  return (\r\n    <AppBar\r\n      color=\"default\"\r\n      position=\"fixed\"\r\n      sx={{\r\n        width: { lg: `calc(100% - ${width}px)` },\r\n        marginLeft: { lg: width },\r\n      }}\r\n    >\r\n      {children}\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default AdminAppBar;\r\n","import IconButton from \"@material-ui/core/IconButton\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport { useSettings } from \"../../core/contexts/SettingsProvider\";\r\n\r\ntype AdminToolbarProps = {\r\n  children?: React.ReactNode;\r\n  title?: string;\r\n};\r\n\r\nconst AdminToolbar = ({ children, title }: AdminToolbarProps) => {\r\n  const { toggleDrawer } = useSettings();\r\n\r\n  return (\r\n    <Toolbar sx={{ px: { xs: 3, sm: 6 } }}>\r\n      <IconButton\r\n        color=\"inherit\"\r\n        aria-label=\"open drawer\"\r\n        edge=\"start\"\r\n        onClick={toggleDrawer}\r\n        sx={{\r\n          display: { lg: \"none\" },\r\n          marginRight: 2,\r\n        }}\r\n      >\r\n        <MenuIcon />\r\n      </IconButton>\r\n      <Typography variant=\"h2\" component=\"h1\" sx={{ flexGrow: 1 }}>\r\n        {title}\r\n      </Typography>\r\n      {children}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nexport default AdminToolbar;\r\n","import Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport AdminAppBar from \"../components/AdminAppBar\";\r\nimport AdminToolbar from \"../components/AdminToolbar\";\r\n\r\nconst questions = [\r\n  {\r\n    title: \"faq.questions.title1\",\r\n    answer: \"faq.questions.answer1\",\r\n  },\r\n  {\r\n    title: \"faq.questions.title2\",\r\n    answer: \"faq.questions.answer2\",\r\n  },\r\n  {\r\n    title: \"faq.questions.title3\",\r\n    answer: \"faq.questions.answer3\",\r\n  },\r\n  {\r\n    title: \"faq.questions.title4\",\r\n    answer: \"faq.questions.answer4\",\r\n  },\r\n  {\r\n    title: \"faq.questions.title5\",\r\n    answer: \"faq.questions.answer5\",\r\n  },\r\n  {\r\n    title: \"faq.questions.title6\",\r\n    answer: \"faq.questions.answer6\",\r\n  },\r\n];\r\n\r\nconst Faq = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <AdminAppBar>\r\n        <AdminToolbar />\r\n      </AdminAppBar>\r\n      <Container maxWidth=\"sm\">\r\n        <Typography align=\"center\" marginBottom={6} variant=\"h2\">\r\n          {t(\"faq.title\")}\r\n        </Typography>\r\n        {questions.map((question, index) => (\r\n          <Accordion key={index}>\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n              <Typography component=\"p\" variant=\"h6\">\r\n                {t(question.title)}\r\n              </Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              <Typography color=\"text.secondary\">\r\n                {t(question.answer)}\r\n              </Typography>\r\n            </AccordionDetails>\r\n          </Accordion>\r\n        ))}\r\n        <Link\r\n          component={RouterLink}\r\n          to={`/${process.env.PUBLIC_URL}/admin/help`}\r\n          variant=\"body2\"\r\n        >\r\n          {t(\"faq.noAnswerLink\")}\r\n        </Link>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Faq;\r\n"],"sourceRoot":""}